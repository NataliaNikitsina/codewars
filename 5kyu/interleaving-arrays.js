// Description:
//     Create a function, that accepts an arbitrary number of arrays and returns a single array generated by alternately appending elements from the passed in arguments. If one of them is shorter than the others, the result should be padded with empty elements.
//     Examples:
// interleave([1, 2, 3], ["c", "d", "e"]) === [1, "c", 2, "d", 3, "e"]
// interleave([1, 2, 3], [4, 5]) === [1, 4, 2, 5, 3, null]
// interleave([1, 2, 3], [4, 5, 6], [7, 8, 9]) === [1, 4, 7, 2, 5, 8, 3, 6, 9]
// interleave([]) === []

function interleave(...args) {
    const result = [];
    let index = 0;
    let maxLength = args.reduce((maxLength, item) => {
        return maxLength < item.length ? item.length : maxLength
    }, 0);
    while (index < maxLength) {
        for (let j = 0; j < args.length; j++) {
            args[j][index] === undefined ? result.push(null) : result.push(args[j][index])
        }
        index++
    }
    return result
}

console.log(interleave([1, 2, 3], [4, 5, 6], [7, 8, 9]))